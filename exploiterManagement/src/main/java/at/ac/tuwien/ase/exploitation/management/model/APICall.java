package at.ac.tuwien.ase.exploitation.management.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Min;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * This entity represents an API call.
 *
 * @author Kevin Haller
 */
@Entity
public class APICall {

  @GenericGenerator(
      name = "exploiterAPICallSequence",
      strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
      parameters = {
          @Parameter(name = "sequence_name", value = "EXPLOITER_API_CALL_ID_SEQUENCE"),
          @Parameter(name = "initial_value", value = "1"),
          @Parameter(name = "increment_size", value = "1")
      }
  )
  @Id
  @GeneratedValue(generator = "exploiterAPICallSequence")
  private Integer id;
  @ManyToOne
  private Exploiter exploiter;
  @Column(nullable = false)
  @Min(0)
  private long cost;
  private String payload;
  private long timestamp;

  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Exploiter getExploiter() {
    return exploiter;
  }

  public void setExploiter(Exploiter exploiter) {
    this.exploiter = exploiter;
  }

  public long getCost() {
    return cost;
  }

  public void setCost(long cost) {
    this.cost = cost;
  }

  public String getPayload() {
    return payload;
  }

  public void setPayload(String payload) {
    this.payload = payload;
  }

  public long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
  }

  @Override
  public String toString() {
    return "APICall{" +
        "id=" + id +
        ", exploiter=" + exploiter +
        ", cost=" + cost +
        ", payload='" + payload + '\'' +
        ", timestamp=" + timestamp +
        '}';
  }
}
