package at.ac.tuwien.ase.exploitation.management.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.Min;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * This class repsents the credit of a exploiter to use the API.
 *
 * @author Kevin Haller
 * @version 1.0
 * @since 1.0
 */
@Entity
@Table(uniqueConstraints={
    @UniqueConstraint(columnNames = {"exploiter_Username", "paymentAddress", "timestamp", "value"})
})
public class APICreditDeposit {

  @GenericGenerator(
      name = "exploiterCreditSequence",
      strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
      parameters = {
          @Parameter(name = "sequence_name", value = "EXPLOITER_CREDIT_ID_SEQUENCE"),
          @Parameter(name = "initial_value", value = "1"),
          @Parameter(name = "increment_size", value = "1")
      }
  )
  @Id
  @GeneratedValue(generator = "exploiterCreditSequence")
  private Integer id;
  @ManyToOne
  private Exploiter exploiter;
  private String paymentAddress;
  private long timestamp;
  @Column(nullable = false)
  @Min(0)
  private long value;

  public Exploiter getExploiter() {
    return exploiter;
  }

  public void setExploiter(Exploiter exploiter) {
    this.exploiter = exploiter;
  }

  public String getPaymentAddress() {
    return paymentAddress;
  }

  public void setPaymentAddress(String paymentAddress) {
    this.paymentAddress = paymentAddress;
  }

  public long getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(long timestamp) {
    this.timestamp = timestamp;
  }

  public long getValue() {
    return value;
  }

  public void setValue(long value) {
    this.value = value;
  }

  @Override
  public String toString() {
    return "APICreditDeposit{" +
        "id=" + id +
        ", exploiter=" + exploiter +
        ", paymentAddress='" + paymentAddress + '\'' +
        ", timestamp=" + timestamp +
        ", value=" + value +
        '}';
  }
}
